pkgname=mos-latest
pkgver=20180910_170858
pkgrel=1
pkgdesc="Mongoose-OS build tool (latest)"
arch=('i686' 'x86_64')
license=('Apache')
url="https://mongoose-os.com/software.html"
depends=('libftdi-compat' 'libusb')
makedepends=(
    'go'
    'git'
    'python2'
    'python2-gitpython'
    'govendor'
    'jshon'
)
conflicts=('mos')

source=(git+https://github.com/cesanta/mos-tool.git#branch=master)

md5sums=('SKIP')

prepare() {
    cd "$srcdir/mos-tool"
    sed -i 's,/usr/bin/env python$,/usr/bin/env python2,g' \
            "common/tools/fw_meta.py"

    mkdir -p "$srcdir/go/src"
    test -d "$srcdir/go/src/cesanta.com" && rm -rf "$srcdir/go/src/cesanta.com"
    mv "$srcdir/mos-tool" "$srcdir/go/src/cesanta.com"
}

pkgver() {
    cd "$srcdir/go/src/cesanta.com"
    python2 common/tools/fw_meta.py gen_build_info \
                --json_output=build_info.json >/dev/null 2>&1
    local build_id=`jshon -F build_info.json -e build_id -u`
    local version=`echo ${build_id} | cut -d '/' -f 1 | sed 's/-/_/'`
    echo "$version"
}

build() {
    export GOPATH="$srcdir/go"
    export PATH="$srcdir/go/bin:$PATH"

    cd "$srcdir/go/src/cesanta.com"
    govendor sync

    cd mos
    make generate
    local build_id=$(jshon -F version/version.json -e build_id -u)
    local hash=$(echo ${build_id} | cut -d '@' -f 2)
    local short_id=$(echo ${build_id} | cut -d '/' -f 1)
    echo "${short_id}+${hash}~makepkg" > version/build_id
    echo ${short_id} > version/version
    go generate ./...
    go build -v -i
}

package() {
    install -D $srcdir/go/src/cesanta.com/mos/mos $pkgdir/usr/bin/mos
}
